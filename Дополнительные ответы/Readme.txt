Из задания: Как можно защититься от накруток? 
1) На сервисе должна быть авторизация
2) У человека не должна быть возможность проголосовать более 1 раза в одном и том же голосовании


ВАЖНО
В задании сказано: "UI не нужен, достаточно сделать JSON API сервис"
Данная реализация выполнена с UI, но без явного JSON
Если крайне важно показать, что человек умеет работать именно с JSON, то я сделал вторую реализацию на Flask:
https://github.com/YegorYurchenko/Polling_JSON

Т.к. эти 2 проекта по большому счёту делают одно и то же, только Polling_JSON намного проще в реализации, то я не стал делать для него тесты.
Декомпозицию я тоже не делал, но если коротко, то она выглядит так:
1) Инициализация проекта, создание структуры проекта
2) Написать конфигурацию Swagger для быстрой и удобной работы с запросами 
3) Реализовать server.py: 
    3.1) Подключить Flask
    3.2) Написать методы-заглушки для методов createPoll, poll, getResult
    3.3) Подключить Swagger для запуска локального сервера
4) Реализовать database.py:
    4.1) Подключиться к PostgreSQL (создать или подключиться к уже существующей БД)
    4.2) Создать таблицу polls, либо удостовериться, что она уже существует
5) Реализовать метод createPoll:
    5.1) Принятие, обработка и отправка JSON в файле server.py
    5.2) Реализовать метод add_new_poll для добавления нового голосования в таблицу в database.py
6) Реализовать метод poll:
    6.1) Принятие, обработка и отправка JSON в файле server.py
    6.2) Реализовать метод vote для голосования за конкретный вариант в database.py
7) Реализовать метод getResult:
    7.1) Принятие, обработка и отправка JSON в файле server.py
    7.2) Реализовать метод get_result для получения результатов конкретного голосования в database.py
